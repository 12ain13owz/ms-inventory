"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("./user.model");
require("./track.model");
require("./inventory.model");
require("./category.model");
require("./status.model");
require("./fund.model");
require("./log.model");
const inventory_model_1 = require("./inventory.model");
const inventory_check_model_1 = require("./inventory-check.model");
const user_model_1 = require("./user.model");
const category_model_1 = require("./category.model");
const status_model_1 = require("./status.model");
const fund_model_1 = require("./fund.model");
const location_model_1 = require("./location.model");
inventory_model_1.Inventory.belongsTo(user_model_1.User, { foreignKey: 'userId' });
inventory_model_1.Inventory.belongsTo(category_model_1.Category, { foreignKey: 'categoryId' });
inventory_model_1.Inventory.belongsTo(status_model_1.Status, { foreignKey: 'statusId' });
inventory_model_1.Inventory.belongsTo(fund_model_1.Fund, { foreignKey: 'fundId' });
inventory_model_1.Inventory.belongsTo(location_model_1.Location, { foreignKey: 'locationId' });
user_model_1.User.hasMany(inventory_model_1.Inventory, { foreignKey: 'userId' });
category_model_1.Category.hasMany(inventory_model_1.Inventory, { foreignKey: 'categoryId' });
status_model_1.Status.hasMany(inventory_model_1.Inventory, { foreignKey: 'statusId' });
fund_model_1.Fund.hasMany(inventory_model_1.Inventory, { foreignKey: 'fundId' });
location_model_1.Location.hasMany(inventory_model_1.Inventory, { foreignKey: 'locationId' });
inventory_check_model_1.InventoryCheck.belongsTo(inventory_model_1.Inventory, { foreignKey: 'inventoryId' });
inventory_model_1.Inventory.hasMany(inventory_check_model_1.InventoryCheck, { foreignKey: 'inventoryId' });
